{"ast":null,"code":"var _jsxFileName = \"/Users/yesdev/Desktop/test/dosomthing.php/quiz/Quiz-App/src/page/componentquiz.jsx\",\n  _s = $RefreshSig$();\nimport axios, { Axios } from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport QuizSample from \"./quizjs\";\nimport Index from \"../layout\";\nimport Swal from 'sweetalert2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Componentquiz() {\n  _s();\n  const [quizData, setQuizData] = useState(QuizSample);\n  const [data, setData] = useState({});\n  const [activeChoice, setActiveChoice] = useState({});\n  const [timeOut, setTimeOut] = useState(30 * 60);\n  const [inputValues, setInputValues] = useState([]);\n  // const [score, setScore] = useState(null);\n\n  // getData\n  // useEffect(() => {\n  //   Axios\n  //     .get\n  //     // localhost:hostของเครื่อง/api/path\n  //     ()\n  //     .then((res) =>\n  //       //res data ที่ส่งมาข้างหลัง\n  //       //  ใช้เอาไป setQuizData Ex. setQuizData(res.data)\n  //       console.log(res)\n  //     )\n  //     .catch((err) =>\n  //       // catch err จากหลังบ้าน Ex.Err ต่างๆจากหลังบ้าน\n  //       console.log(err)\n  //     );\n  // }, []);\n\n  useEffect(() => {\n    const intervalTime = setInterval(() => {\n      setTimeOut(prevTime => prevTime - 1);\n    }, 1000);\n    return () => {\n      clearInterval(intervalTime);\n    };\n  }, []);\n  const min = Math.floor(timeOut / 60);\n  const seconds = timeOut % 60;\n  useEffect(() => {\n    // console.table(inputValues);\n\n    if (min === 5 && seconds === 0) {\n      Swal.fire({\n        title: \"จะหมดเวลาละรีบทำ\",\n        icon: \"warning\",\n        confirmButtonText: \"เออรู้ละ\"\n      });\n    }\n    if (min === 0 && seconds === 0) {\n      axios.post(\"\", data).then(res => {\n        Swal.fire({\n          title: \"หมดเวลา\",\n          text: \"ยืนยันส่งด้วย\",\n          icon: \"warning\",\n          confirmButtonText: \"เออรู้ละ\"\n        }).then(result => {});\n        //\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n    // console.log(data);\n  }, [data, inputValues]);\n  useEffect(() => {\n    // console.log(data);\n    // console.log(activeChoice);\n  }, [data]);\n  const handleChoiceSelect = (questionId, choiceIndex) => {\n    setActiveChoice(prev => ({\n      ...prev,\n      [questionId]: choiceIndex\n    }));\n    const thisInput = Array.isArray(inputValues) && inputValues.find(obj => obj[\"question_id\"] === questionId);\n    const updatedInputValues = thisInput ? inputValues.map(obj => obj === thisInput ? {\n      ...obj,\n      select: choiceIndex\n    } : obj) : [...inputValues, {\n      id: questionId,\n      select: choiceIndex\n    }];\n    setInputValues(updatedInputValues);\n  };\n  const handleSubmit = () => {\n    const newData = inputValues.map(inputValue => {\n      if (inputValue.hasOwnProperty(\"select\")) {\n        var _inputValue;\n        // Retrieve the values of the 'select' property\n        inputValue[\"question_id\"] = (_inputValue = inputValue) === null || _inputValue === void 0 ? void 0 : _inputValue.id; // Assign the values to the 'ans' property\n        inputValue[\"ans\"] = [inputValue.select]; // Assign the values to the 'ans' property\n        delete inputValue.id; // Remove the 'select' property\n        delete inputValue.select; // Remove the 'select' property\n      } else {\n        const reducedObj = Object.keys(inputValue).reduce((acc, key) => {\n          console.log(acc);\n          if (key !== \"question_id\") {\n            acc.ans.push(inputValue[\"input\"] || null, inputValue[\"input1\"] || null, inputValue[\"input2\"] || null);\n          }\n          return acc;\n        }, {\n          question_id: inputValue.question_id,\n          ans: []\n        });\n        inputValue = reducedObj;\n      }\n      return inputValue;\n    });\n    const result = {\n      username: data.username,\n      email: data.email,\n      questions: newData\n    };\n    setData(result);\n    // console.log(data);\n  };\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleInput = (questionId, e) => {\n    const {\n      name,\n      value\n    } = e.target;\n    const thisInput = Array.isArray(inputValues) && inputValues.find(obj => obj[\"question_id\"] === questionId);\n    const updatedInputValues = thisInput ? inputValues.map(obj => obj === thisInput ? {\n      ...obj,\n      [name]: value\n    } : obj) : [...inputValues, {\n      question_id: questionId,\n      [name]: value\n    }];\n    setInputValues(updatedInputValues);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col gap-[24px] items-center\",\n    children: /*#__PURE__*/_jsxDEV(Index, {\n      min: min,\n      seconds: seconds,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"username\",\n        name: \"username\",\n        value: data.username,\n        onChange: e => handleChange(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        className: \"email\",\n        name: \"email\",\n        value: data.email,\n        onChange: e => handleChange(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), quizData.map((item, ind) => {\n        var _inputValues$find, _inputValues$find2, _inputValues$find3, _item$choices;\n        const question_quiz = item.sub_question;\n        const inputObj = {\n          \"%i%\": /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"input\",\n            value: Array.isArray(inputValues) && (_inputValues$find = inputValues.find(obj => obj[\"question_id\"] === item.question_id)) !== null && _inputValues$find !== void 0 && _inputValues$find.input ? inputValues.find(obj => obj[\"question_id\"] === item.question_id).input : \"\",\n            onChange: e => handleInput(item.question_id, e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 15\n          }, this),\n          \"%i1%\": /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"input1\",\n            value: Array.isArray(inputValues) && (_inputValues$find2 = inputValues.find(obj => obj[\"question_id\"] === item.question_id)) !== null && _inputValues$find2 !== void 0 && _inputValues$find2.input1 ? inputValues.find(obj => obj[\"question_id\"] === item.question_id).input1 : \"\",\n            onChange: e => handleInput(item.question_id, e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 15\n          }, this),\n          \"%i2%\": /*#__PURE__*/_jsxDEV(\"input\", {\n            style: {\n              margin: \"0px 16px 0px\"\n            },\n            type: \"text\",\n            name: \"input2\",\n            value: Array.isArray(inputValues) && (_inputValues$find3 = inputValues.find(obj => obj[\"question_id\"] === item.question_id)) !== null && _inputValues$find3 !== void 0 && _inputValues$find3.input2 ? inputValues.find(obj => obj[\"question_id\"] === item.question_id).input2 : \"\",\n            onChange: e => handleInput(item.question_id, e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 15\n          }, this),\n          function: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \" text-purple-400 text-xl\",\n            children: \"function \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 15\n          }, this),\n          return: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-purple-400 text-xl\",\n            children: \"return \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 21\n          }, this),\n          const: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-purple-500 text-xl\",\n            children: \"const \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 20\n          }, this)\n        };\n        const swap_text = () => {\n          const text_array = question_quiz.split(\" \");\n          const a = text_array.map(item => {\n            if (item in inputObj) item = inputObj[item];else item += \" \";\n            return item;\n          });\n          return a;\n        };\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex mb-[24px] w-[50%] \",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-col gap-[20px] w-full  \",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [ind + 1, \". \", item.question]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 17\n            }, this), item.type_question === \"key\" ? /*#__PURE__*/_jsxDEV(\"pre\", {\n              children: /*#__PURE__*/_jsxDEV(\"code\", {\n                children: swap_text()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex gap-[16px] w-[100%] \",\n              children: (_item$choices = item.choices) === null || _item$choices === void 0 ? void 0 : _item$choices.map((choiz, indexchoice) => {\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `flex w-[25%] ${activeChoice[item.question_id] === choiz ? \"bg-[#bbadad67] text-black \" : \"bg-blue-900 text-white\"}\n                            p-[24px]  break-all\n                            justify-center rounded-[16px] box-border text-2 `,\n                  onClick: () => {\n                    handleChoiceSelect(item.question_id, choiz);\n                  },\n                  children: choiz\n                }, choiz.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 259,\n                  columnNumber: 25\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 15\n          }, this)\n        }, item.question_id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 13\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"footer\", {\n        className: \"bttton-submit-container flex justify-center w-[50%] \",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button-submit p-4 text-white bg-[#213555] m-10 rounded-xl\",\n          onClick: handleSubmit,\n          children: \"\\u0E2A\\u0E48\\u0E07\\u0E04\\u0E33\\u0E15\\u0E2D\\u0E1A\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 5\n  }, this);\n}\n// console.log(\"swap_text -->\", swap_text());\n// console.log(\"question \", question_quiz);\n// data.question\n//           var parts = \"I am a cow; cows say moo. MOOOOO.\".split(/(\\bmoo+\\b)/gi);\n// for (var i = 1; i < parts.length; i += 2) {\n//   parts[i] = <span className=\"match\" key={i}>{parts[i]}</span>;\n// }\n// return <div>{parts}</div>;\n// const keyEditParts = item.keyEdit.split(/%i%|%i1%|%i2%/gi);\n\n// const newKeyEdit = item.keyEdit\n//   .toString()\n//   .replace(/%i%|%i1%|%i2%/gi, (match) => {\n//     return inputObj[match];\n//   });\n\n// const newKeyEdit = keyEditParts.map((part, index) => {\n//   switch (index) {\n//     case keyEditParts.length - 1:\n//       return part;\n//     case 0:\n//     case 1:\n//     case 2:\n//       return (\n//         <input\n//           key={index}\n//           type=\"text\"\n//           name={part}\n//           value={inputValues[ind][part]}\n//           onChange={(e) => handleInput(item.id, e)}\n//         />\n//       );\n//     default:\n//       return null;\n//   }\n// });\n\n// import React, { useState } from 'react';\n\n// function Quiz() {\n//   const questions = [\n//     { question: 'Question 1', id: 1, correctInput1: 'Correct 1', correctInput2: 'Correct 2' },\n//     { question: 'Question 2', id: 2, correctInput1: 'Answer 1', correctInput2: 'Answer 2' },\n//     // Add more questions as needed\n//   ];\n\n//   const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n//   const currentQuestion = questions[currentQuestionIndex];\n\n//   const [input1, setInput1] = useState('');\n//   const [input2, setInput2] = useState('');\n//   const [isAnswerCorrect, setIsAnswerCorrect] = useState(false);\n\n//   const handleInput1Change = (e) => {\n//     setInput1(e.target.value);\n//   };\n\n//   const handleInput2Change = (e) => {\n//     setInput2(e.target.value);\n//   };\n\n//   const handleNextQuestion = () => {\n//     if (isAnswerCorrect) {\n//       setCurrentQuestionIndex(currentQuestionIndex + 1);\n//       setInput1('');\n//       setInput2('');\n//       setIsAnswerCorrect(false);\n//     }\n//   };\n\n//   const checkAnswer = () => {\n//     if (\n//       input1 === currentQuestion.correctInput1 &&\n//       input2 === currentQuestion.correctInput2\n//     ) {\n//       setIsAnswerCorrect(true);\n//     } else {\n//       setIsAnswerCorrect(false);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h2>{currentQuestion.question}</h2>\n//       <input type=\"text\" value={input1} onChange={handleInput1Change} />\n//       <input type=\"text\" value={input2} onChange={handleInput2Change} />\n//       <button onClick={checkAnswer}>Check Answer</button>\n//       {isAnswerCorrect && <p>Correct!</p>}\n//       {!isAnswerCorrect && (\n//         <p>Incorrect. Please try again or move to the next question.</p>\n//       )}\n//       <button onClick={handleNextQuestion}>Next Question</button>\n//     </div>\n//   );\n// }\n\n// import React, { useState } from 'react';\n\n// function Quiz() {\n//   const questions = [\n//     { question: 'Question 1', id: 1, correctInput1: 'Correct 1', correctInput2: 'Correct 2' },\n//     { question: 'Question 2', id: 2, correctInput1: 'Answer 1', correctInput2: 'Answer 2' },\n//     // Add more questions as needed\n//   ];\n\n//   const [inputs, setInputs] = useState(\n//     questions.map((question) => ({\n//       id: question.id,\n//       input1: '',\n//       input2: '',\n//       isAnswerCorrect: false,\n//     }))\n//   );\n\n//   const handleInputChange = (e, questionId) => {\n//     const { name, value } = e.target;\n//     setInputs((prevInputs) =>\n//       prevInputs.map((input) =>\n//         input.id === questionId ? { ...input, [name]: value } : input\n//       )\n//     );\n//   };\n\n//   const checkAnswer = (questionId) => {\n//     const question = questions.find((q) => q.id === questionId);\n//     const input = inputs.find((input) => input.id === questionId);\n\n//     if (\n//       input.input1 === question.correctInput1 &&\n//       input.input2 === question.correctInput2\n//     ) {\n//       setInputs((prevInputs) =>\n//         prevInputs.map((input) =>\n//           input.id === questionId ? { ...input, isAnswerCorrect: true } : input\n//         )\n//       );\n//     } else {\n//       setInputs((prevInputs) =>\n//         prevInputs.map((input) =>\n//           input.id === questionId ? { ...input, isAnswerCorrect: false } : input\n//         )\n//       );\n//     }\n//   };\n\n//   return (\n//     <div>\n//       {questions.map((question) => {\n//         const input = inputs.find((input) => input.id === question.id);\n\n//         return (\n//           <div key={question.id} className='flex flex-col gap-4'>\n//             <h2>{question.question}</h2>\n//             <input\n//               className='bg-black text-white'\n//               type=\"text\"\n//               name=\"input1\"\n//               value={input.input1}\n//               onChange={(e) => handleInputChange(e, question.id)}\n//             />\n//             <input\n//             className='bg-black text-white'\n//               type=\"text\"\n//               name=\"input2\"\n//               value={input.input2}\n//               onChange={(e) => handleInputChange(e, question.id)}\n//             />\n//             <button onClick={() => checkAnswer(question.id)}>Check Answer</button>\n//             {input.isAnswerCorrect && <p>Correct!</p>}\n//             {!input.isAnswerCorrect && (\n//               <p>Incorrect. Please try again.</p>\n//             )}\n//           </div>\n//         );\n//       })}\n//     </div>\n//   );\n// }\n\n// export default Quiz;\n\n// import React, { useState } from \"react\";\n\n// const Quiz = () => {\n//   // const [quizData, setQuizData] = useState(QuizSample);\n//   const [answers, setAnswers] = useState([]);\n\n//   const handleInputChange = (e, questionId) => {\n//     const { name, value } = e.target;\n//     setAnswers((prevAnswers) => {\n//       const updatedAnswers = [...prevAnswers];\n//       const answerIndex = updatedAnswers.findIndex(\n//         (answer) => answer.questionId === questionId\n//       );\n//       if (answerIndex !== -1) {\n//         updatedAnswers[answerIndex][name] = value;\n//       } else {\n//         updatedAnswers.push({ questionId, [name]: value });\n//       }\n//       return updatedAnswers;\n//     });\n//   };\n\n//   const handleSelectChange = (e, questionId) => {\n//     const { value } = e.target;\n//     setAnswers((prevAnswers) => {\n//       const updatedAnswers = [...prevAnswers];\n//       const answerIndex = updatedAnswers.findIndex(\n//         (answer) => answer.questionId === questionId\n//       );\n//       if (answerIndex !== -1) {\n//         updatedAnswers[answerIndex].selectedChoice = value;\n//       } else {\n//         updatedAnswers.push({ questionId, selectedChoice: value });\n//       }\n//       return updatedAnswers;\n//     });\n//   };\n\n//   const handleSubmit = () => {\n//     console.log(\"Submitted answers:\", answers);\n//     // Add your logic for handling the submitted answers\n//   };\n\n//   const renderQuestion = (question) => {\n//     switch (question.type_Quiz) {\n//       case \"key\":\n//         return (\n//           <div key={question.id}>\n//             <p>{question.title}</p>\n//             <div className=\"flex flex-col\">\n//               {question.keyEdit\n//                 .replace(/%i%/g, question.correctInput)\n//                 .replace(/%i1%/g, question.correctInput1)\n//                 .replace(/%i2%/g, question.correctInput2)}\n//             </div>\n//             <input\n//               type=\"text\"\n//               name=\"input\"\n//               value={getAnswer(question.id, \"input\") || \"\"}\n//               onChange={(e) => handleInputChange(e, question.id)}\n//             />\n//           </div>\n//         );\n//       case \"select\":\n//         return (\n//           <div key={question.id}>\n//             <p>{question.title}</p>\n//             <select\n//               name=\"selectedChoice\"\n//               value={getAnswer(question.id, \"selectedChoice\") || \"\"}\n//               onChange={(e) => handleSelectChange(e, question.id)}\n//             >\n//               <option value=\"\">Select an option</option>\n//               {question.QuizChoice.map((choice, index) => (\n//                 <option key={index} value={index}>\n//                   {choice}\n//                 </option>\n//               ))}\n//             </select>\n//           </div>\n//         );\n//       default:\n//         return null;\n//     }\n//   };\n\n//   const getAnswer = (questionId, key) => {\n//     const answer = answers.find((answer) => answer.questionId === questionId);\n//     return answer ? answer[key] : null;\n//   };\n\n//   return (\n//     <div>\n//       <h1>Quiz</h1>\n//       {quizData.map((question) => renderQuestion(question))}\n//       <button onClick={handleSubmit}>Submit</button>\n//     </div>\n//   );\n// };\n\n// export default Quiz;\n\n// import React, { useEffect, useState } from \"react\";\n// import QuizSample from \"./quiz\";\n// import Index from \"../layout\";\n\n// export default function Componentquiz() {\n//   const [quizData, setQuizData] = useState(QuizSample);\n//   const [timeOut, setTimeOut] = useState(10 * 60);\n//   const [score, setScore] = useState(null);\n//   const [showResult, setShowResult] = useState(false);\n//   const [inputValues, setInputValues] = useState(\n//     quizData.map((item) => ({\n//       id: item.id,\n//       input_: \"string_0\",\n//       input_1: \"\",\n//       input_2: \"\",\n//       correctAnswer: false,\n//     }))\n//   );\n\n//   useEffect(() => {\n//     const intervalTime = setInterval(() => {\n//       setTimeOut((prevTime) => prevTime - 1);\n//     }, 1000);\n\n//     return () => {\n//       clearInterval(intervalTime);\n//     };\n//   }, []);\n\n//   const min = Math.floor(timeOut / 60);\n//   const seconds = timeOut % 60;\n\n//   const handleChoiceSelect = (questionId, choiceIndex) => {\n//     setQuizData((prevQuestions) => {\n//       return prevQuestions.map((question) => {\n//         if (question.id === questionId) {\n//           return {\n//             ...question,\n//             activeChoice: choiceIndex,\n//           };\n//         }\n//         return question;\n//       });\n//     });\n//   };\n\n//   const handleSubmit = () => {\n//     let newscore = 0;\n//     quizData.forEach((prev) => {\n//       if (\n//         prev.activeChoice === prev.correctchoice &&\n//         prev.type_Quiz === \"select\"\n//       ) {\n//         newscore++;\n//       }\n//     });\n//     setScore(newscore);\n//     setShowResult(!showResult);\n//     console.log(\"log submit\", inputValues[0]?.input_);\n//   };\n\n//   useEffect(() => {\n//     console.log(\"check input --->\", inputValues[0].input_);\n//   }, [inputValues]);\n\n//   return (\n//     <div className=\"flex flex-col gap-[24px] items-center\">\n//       <Index min={min} seconds={seconds}>\n//         {quizData.map((item, ind) => {\n//           const newKeyEdit = item.keyEdit.replace(\n//             /%i%|%i1%|%i2%/gi,\n//             (match) => {\n//               if (match === \"%i%\") {\n//                 return (\n//                   <input\n//                     key={item.id}\n//                     type=\"text\"\n//                     value={inputValues[ind].input_}\n//                     name=\"input_\"\n//                     onChange={(e) => {\n//                       const updateValues = [...inputValues];\n//                       updateValues[ind].input_ = e.target.value;\n//                       setInputValues(updateValues);\n//                     }}\n//                   />\n//                 );\n//               } else if (match === \"%i1%\") {\n//                 return (\n//                   <input\n//                     key={item.id}\n//                     type=\"text\"\n//                     value={inputValues[ind].input_1}\n//                     name=\"input_1\"\n//                     onChange={(e) => {\n//                       const updateValues = [...inputValues];\n//                       updateValues[ind].input_1 = e.target.value;\n//                       setInputValues(updateValues);\n//                     }}\n//                   />\n//                 );\n//               } else if (match === \"%i2%\") {\n//                 return (\n//                   <input\n//                     key={item.id}\n//                     type=\"text\"\n//                     value={inputValues[ind].input_2}\n//                     name=\"input_2\"\n//                     onChange={(e) => {\n//                       const updateValues = [...inputValues];\n//                       updateValues[ind].input_2 = e.target.value;\n//                       setInputValues(updateValues);\n//                     }}\n//                   />\n//                 );\n//               }\n//               return match;\n//             }\n//           );\n\n//           return (\n//             <div key={item.id}>\n//               <h3>{item.question}</h3>\n//               {item.type_Quiz === \"select\" ? (\n//                 item.QuizChoice.map((choice, index) => (\n//                   <div key={index}>\n//                     <label>\n//                       <input\n//                         type=\"radio\"\n//                         checked={item.activeChoice === index}\n//                         onChange={() => handleChoiceSelect(item.id, index)}\n//                       />\n//                       {choice}\n//                     </label>\n//                   </div>\n//                 ))\n//               ) : (\n//                 <div>{newKeyEdit}</div>\n//               )}\n//             </div>\n//           );\n//         })}\n//       </Index>\n//       <button onClick={handleSubmit}>Submit</button>\n//       {showResult && (\n//         <div>\n//           <h2>Your Score: {score}</h2>\n//         </div>\n//       )}\n//     </div>\n//   );\n// }\n_s(Componentquiz, \"rPLWbYYdApHm6Rj25Rfab150TaQ=\");\n_c = Componentquiz;\nvar _c;\n$RefreshReg$(_c, \"Componentquiz\");","map":{"version":3,"names":["axios","Axios","React","useEffect","useState","QuizSample","Index","Swal","jsxDEV","_jsxDEV","Componentquiz","_s","quizData","setQuizData","data","setData","activeChoice","setActiveChoice","timeOut","setTimeOut","inputValues","setInputValues","intervalTime","setInterval","prevTime","clearInterval","min","Math","floor","seconds","fire","title","icon","confirmButtonText","post","then","res","text","result","catch","err","console","log","handleChoiceSelect","questionId","choiceIndex","prev","thisInput","Array","isArray","find","obj","updatedInputValues","map","select","id","handleSubmit","newData","inputValue","hasOwnProperty","_inputValue","reducedObj","Object","keys","reduce","acc","key","ans","push","question_id","username","email","questions","handleChange","e","name","value","target","handleInput","className","children","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","item","ind","_inputValues$find","_inputValues$find2","_inputValues$find3","_item$choices","question_quiz","sub_question","inputObj","input","input1","style","margin","input2","function","return","const","swap_text","text_array","split","a","question","type_question","choices","choiz","indexchoice","onClick","_c","$RefreshReg$"],"sources":["/Users/yesdev/Desktop/test/dosomthing.php/quiz/Quiz-App/src/page/componentquiz.jsx"],"sourcesContent":["import axios, { Axios } from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport QuizSample from \"./quizjs\";\nimport Index from \"../layout\";\nimport Swal from 'sweetalert2'\n\nexport default function Componentquiz() {\n  const [quizData, setQuizData] = useState(QuizSample);\n  const [data, setData] = useState({});\n  const [activeChoice, setActiveChoice] = useState({});\n  const [timeOut, setTimeOut] = useState(30 * 60);\n  const [inputValues, setInputValues] = useState([]);\n  // const [score, setScore] = useState(null);\n\n  // getData\n  // useEffect(() => {\n  //   Axios\n  //     .get\n  //     // localhost:hostของเครื่อง/api/path\n  //     ()\n  //     .then((res) =>\n  //       //res data ที่ส่งมาข้างหลัง\n  //       //  ใช้เอาไป setQuizData Ex. setQuizData(res.data)\n  //       console.log(res)\n  //     )\n  //     .catch((err) =>\n  //       // catch err จากหลังบ้าน Ex.Err ต่างๆจากหลังบ้าน\n  //       console.log(err)\n  //     );\n  // }, []);\n\n  useEffect(() => {\n    const intervalTime = setInterval(() => {\n      setTimeOut((prevTime) => prevTime - 1);\n    }, 1000);\n\n    return () => {\n      clearInterval(intervalTime);\n    };\n  }, []);\n\n  const min = Math.floor(timeOut / 60);\n  const seconds = timeOut % 60;\n\n  useEffect(() => {\n    // console.table(inputValues);\n\n    if (min === 5 && seconds === 0) {\n      Swal.fire({\n        title : \"จะหมดเวลาละรีบทำ\",\n        icon : \"warning\",\n        confirmButtonText : \"เออรู้ละ\"\n      })\n    }\n    if (min === 0 && seconds === 0) {\n      axios\n      .post(\"\", data)\n      .then((res) => {\n          Swal.fire({\n            title : \"หมดเวลา\",\n            text : \"ยืนยันส่งด้วย\",\n            icon : \"warning\",\n            confirmButtonText : \"เออรู้ละ\"\n          }).then(result=> {\n            \n          })\n          //\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n    // console.log(data);\n  }, [data, inputValues]);\n  useEffect(() => {\n    // console.log(data);\n    // console.log(activeChoice);\n  }, [data]);\n\n  const handleChoiceSelect = (questionId, choiceIndex) => {\n    setActiveChoice((prev) => ({\n      ...prev,\n      [questionId]: choiceIndex,\n    }));\n\n    const thisInput =\n      Array.isArray(inputValues) &&\n      inputValues.find((obj) => obj[\"question_id\"] === questionId);\n\n    const updatedInputValues = thisInput\n      ? inputValues.map((obj) =>\n          obj === thisInput ? { ...obj, select: choiceIndex } : obj\n        )\n      : [...inputValues, { id: questionId, select: choiceIndex }];\n    setInputValues(updatedInputValues);\n  };\n\n  const handleSubmit = () => {\n    const newData = inputValues.map((inputValue) => {\n      if (inputValue.hasOwnProperty(\"select\")) {\n        // Retrieve the values of the 'select' property\n        inputValue[\"question_id\"] = inputValue?.id; // Assign the values to the 'ans' property\n        inputValue[\"ans\"] = [inputValue.select]; // Assign the values to the 'ans' property\n        delete inputValue.id; // Remove the 'select' property\n        delete inputValue.select; // Remove the 'select' property\n      } else {\n        const reducedObj = Object.keys(inputValue).reduce(\n          (acc, key) => {\n            console.log(acc);\n            if (key !== \"question_id\") {\n              acc.ans.push(\n                inputValue[\"input\"] || null,\n                inputValue[\"input1\"] || null,\n                inputValue[\"input2\"] || null\n              );\n            }\n            return acc;\n          },\n          { question_id: inputValue.question_id, ans: [] }\n        );\n        inputValue = reducedObj;\n      }\n      return inputValue;\n    });\n\n    const result = {\n      username: data.username,\n      email: data.email,\n      questions: newData,\n    };\n\n    setData(result);\n    // console.log(data);\n  };\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setData((prev) => ({ ...prev, [name]: value }));\n  };\n\n  const handleInput = (questionId, e) => {\n    const { name, value } = e.target;\n    const thisInput =\n      Array.isArray(inputValues) &&\n      inputValues.find((obj) => obj[\"question_id\"] === questionId);\n\n    const updatedInputValues = thisInput\n      ? inputValues.map((obj) =>\n          obj === thisInput ? { ...obj, [name]: value } : obj\n        )\n      : [...inputValues, { question_id: questionId, [name]: value }];\n    setInputValues(updatedInputValues);\n  };\n\n  return (\n    <div className=\"flex flex-col gap-[24px] items-center\">\n      <Index min={min} seconds={seconds}>\n        <input\n          type=\"text\"\n          className=\"username\"\n          name=\"username\"\n          value={data.username}\n          onChange={(e) => handleChange(e)}\n        />\n        <input\n          type=\"email\"\n          className=\"email\"\n          name=\"email\"\n          value={data.email}\n          onChange={(e) => handleChange(e)}\n        />\n        {quizData.map((item, ind) => {\n          const question_quiz = item.sub_question;\n\n          const inputObj = {\n            \"%i%\": (\n              <input\n                type=\"text\"\n                name=\"input\"\n                value={\n                  Array.isArray(inputValues) &&\n                  inputValues.find(\n                    (obj) => obj[\"question_id\"] === item.question_id\n                  )?.input\n                    ? inputValues.find(\n                        (obj) => obj[\"question_id\"] === item.question_id\n                      ).input\n                    : \"\"\n                }\n                onChange={(e) => handleInput(item.question_id, e)}\n              />\n            ),\n            \"%i1%\": (\n              <input\n                type=\"text\"\n                name=\"input1\"\n                value={\n                  Array.isArray(inputValues) &&\n                  inputValues.find(\n                    (obj) => obj[\"question_id\"] === item.question_id\n                  )?.input1\n                    ? inputValues.find(\n                        (obj) => obj[\"question_id\"] === item.question_id\n                      ).input1\n                    : \"\"\n                }\n                onChange={(e) => handleInput(item.question_id, e)}\n              />\n            ),\n            \"%i2%\": (\n              <input\n                style={{ margin: \"0px 16px 0px\" }}\n                type=\"text\"\n                name=\"input2\"\n                value={\n                  Array.isArray(inputValues) &&\n                  inputValues.find(\n                    (obj) => obj[\"question_id\"] === item.question_id\n                  )?.input2\n                    ? inputValues.find(\n                        (obj) => obj[\"question_id\"] === item.question_id\n                      ).input2\n                    : \"\"\n                }\n                onChange={(e) => handleInput(item.question_id, e)}\n              />\n            ),\n            function: (\n              <span className=\" text-purple-400 text-xl\">function </span>\n            ),\n            return: <span className=\"text-purple-400 text-xl\">return </span>,\n            const: <span className=\"text-purple-500 text-xl\">const </span>,\n          };\n          const swap_text = () => {\n            const text_array = question_quiz.split(\" \");\n            const a = text_array.map((item) => {\n              if (item in inputObj) item = inputObj[item];\n              else item += \" \";\n              return item;\n            });\n            return a;\n          };\n\n          return (\n            <div className=\"flex mb-[24px] w-[50%] \" key={item.question_id}>\n              <div className=\"flex flex-col gap-[20px] w-full  \">\n                <div>\n                  {ind + 1}. {item.question}\n                </div>\n\n                {item.type_question === \"key\" ? (\n                  <pre>\n                    <code>{swap_text()}</code>\n                  </pre>\n                ) : (\n                  <div className=\"flex gap-[16px] w-[100%] \">\n                    {item.choices?.map((choiz, indexchoice) => {\n                      return (\n                        <div\n                          key={choiz.id}\n                          className={`flex w-[25%] ${\n                            activeChoice[item.question_id] === choiz\n                              ? \"bg-[#bbadad67] text-black \"\n                              : \"bg-blue-900 text-white\"\n                          }\n                            p-[24px]  break-all\n                            justify-center rounded-[16px] box-border text-2 `}\n                          onClick={() => {\n                            handleChoiceSelect(item.question_id, choiz);\n                          }}\n                        >\n                          {choiz}\n                        </div>\n                      );\n                    })}\n                  </div>\n                )}\n              </div>\n            </div>\n          );\n        })}\n        <footer className=\"bttton-submit-container flex justify-center w-[50%] \">\n          <button\n            className=\"button-submit p-4 text-white bg-[#213555] m-10 rounded-xl\"\n            onClick={handleSubmit}\n          >\n            ส่งคำตอบ\n          </button>\n        </footer>\n      </Index>\n    </div>\n  );\n}\n// console.log(\"swap_text -->\", swap_text());\n// console.log(\"question \", question_quiz);\n// data.question\n//           var parts = \"I am a cow; cows say moo. MOOOOO.\".split(/(\\bmoo+\\b)/gi);\n// for (var i = 1; i < parts.length; i += 2) {\n//   parts[i] = <span className=\"match\" key={i}>{parts[i]}</span>;\n// }\n// return <div>{parts}</div>;\n// const keyEditParts = item.keyEdit.split(/%i%|%i1%|%i2%/gi);\n\n// const newKeyEdit = item.keyEdit\n//   .toString()\n//   .replace(/%i%|%i1%|%i2%/gi, (match) => {\n//     return inputObj[match];\n//   });\n\n// const newKeyEdit = keyEditParts.map((part, index) => {\n//   switch (index) {\n//     case keyEditParts.length - 1:\n//       return part;\n//     case 0:\n//     case 1:\n//     case 2:\n//       return (\n//         <input\n//           key={index}\n//           type=\"text\"\n//           name={part}\n//           value={inputValues[ind][part]}\n//           onChange={(e) => handleInput(item.id, e)}\n//         />\n//       );\n//     default:\n//       return null;\n//   }\n// });\n\n// import React, { useState } from 'react';\n\n// function Quiz() {\n//   const questions = [\n//     { question: 'Question 1', id: 1, correctInput1: 'Correct 1', correctInput2: 'Correct 2' },\n//     { question: 'Question 2', id: 2, correctInput1: 'Answer 1', correctInput2: 'Answer 2' },\n//     // Add more questions as needed\n//   ];\n\n//   const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n//   const currentQuestion = questions[currentQuestionIndex];\n\n//   const [input1, setInput1] = useState('');\n//   const [input2, setInput2] = useState('');\n//   const [isAnswerCorrect, setIsAnswerCorrect] = useState(false);\n\n//   const handleInput1Change = (e) => {\n//     setInput1(e.target.value);\n//   };\n\n//   const handleInput2Change = (e) => {\n//     setInput2(e.target.value);\n//   };\n\n//   const handleNextQuestion = () => {\n//     if (isAnswerCorrect) {\n//       setCurrentQuestionIndex(currentQuestionIndex + 1);\n//       setInput1('');\n//       setInput2('');\n//       setIsAnswerCorrect(false);\n//     }\n//   };\n\n//   const checkAnswer = () => {\n//     if (\n//       input1 === currentQuestion.correctInput1 &&\n//       input2 === currentQuestion.correctInput2\n//     ) {\n//       setIsAnswerCorrect(true);\n//     } else {\n//       setIsAnswerCorrect(false);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h2>{currentQuestion.question}</h2>\n//       <input type=\"text\" value={input1} onChange={handleInput1Change} />\n//       <input type=\"text\" value={input2} onChange={handleInput2Change} />\n//       <button onClick={checkAnswer}>Check Answer</button>\n//       {isAnswerCorrect && <p>Correct!</p>}\n//       {!isAnswerCorrect && (\n//         <p>Incorrect. Please try again or move to the next question.</p>\n//       )}\n//       <button onClick={handleNextQuestion}>Next Question</button>\n//     </div>\n//   );\n// }\n\n// import React, { useState } from 'react';\n\n// function Quiz() {\n//   const questions = [\n//     { question: 'Question 1', id: 1, correctInput1: 'Correct 1', correctInput2: 'Correct 2' },\n//     { question: 'Question 2', id: 2, correctInput1: 'Answer 1', correctInput2: 'Answer 2' },\n//     // Add more questions as needed\n//   ];\n\n//   const [inputs, setInputs] = useState(\n//     questions.map((question) => ({\n//       id: question.id,\n//       input1: '',\n//       input2: '',\n//       isAnswerCorrect: false,\n//     }))\n//   );\n\n//   const handleInputChange = (e, questionId) => {\n//     const { name, value } = e.target;\n//     setInputs((prevInputs) =>\n//       prevInputs.map((input) =>\n//         input.id === questionId ? { ...input, [name]: value } : input\n//       )\n//     );\n//   };\n\n//   const checkAnswer = (questionId) => {\n//     const question = questions.find((q) => q.id === questionId);\n//     const input = inputs.find((input) => input.id === questionId);\n\n//     if (\n//       input.input1 === question.correctInput1 &&\n//       input.input2 === question.correctInput2\n//     ) {\n//       setInputs((prevInputs) =>\n//         prevInputs.map((input) =>\n//           input.id === questionId ? { ...input, isAnswerCorrect: true } : input\n//         )\n//       );\n//     } else {\n//       setInputs((prevInputs) =>\n//         prevInputs.map((input) =>\n//           input.id === questionId ? { ...input, isAnswerCorrect: false } : input\n//         )\n//       );\n//     }\n//   };\n\n//   return (\n//     <div>\n//       {questions.map((question) => {\n//         const input = inputs.find((input) => input.id === question.id);\n\n//         return (\n//           <div key={question.id} className='flex flex-col gap-4'>\n//             <h2>{question.question}</h2>\n//             <input\n//               className='bg-black text-white'\n//               type=\"text\"\n//               name=\"input1\"\n//               value={input.input1}\n//               onChange={(e) => handleInputChange(e, question.id)}\n//             />\n//             <input\n//             className='bg-black text-white'\n//               type=\"text\"\n//               name=\"input2\"\n//               value={input.input2}\n//               onChange={(e) => handleInputChange(e, question.id)}\n//             />\n//             <button onClick={() => checkAnswer(question.id)}>Check Answer</button>\n//             {input.isAnswerCorrect && <p>Correct!</p>}\n//             {!input.isAnswerCorrect && (\n//               <p>Incorrect. Please try again.</p>\n//             )}\n//           </div>\n//         );\n//       })}\n//     </div>\n//   );\n// }\n\n// export default Quiz;\n\n// import React, { useState } from \"react\";\n\n// const Quiz = () => {\n//   // const [quizData, setQuizData] = useState(QuizSample);\n//   const [answers, setAnswers] = useState([]);\n\n//   const handleInputChange = (e, questionId) => {\n//     const { name, value } = e.target;\n//     setAnswers((prevAnswers) => {\n//       const updatedAnswers = [...prevAnswers];\n//       const answerIndex = updatedAnswers.findIndex(\n//         (answer) => answer.questionId === questionId\n//       );\n//       if (answerIndex !== -1) {\n//         updatedAnswers[answerIndex][name] = value;\n//       } else {\n//         updatedAnswers.push({ questionId, [name]: value });\n//       }\n//       return updatedAnswers;\n//     });\n//   };\n\n//   const handleSelectChange = (e, questionId) => {\n//     const { value } = e.target;\n//     setAnswers((prevAnswers) => {\n//       const updatedAnswers = [...prevAnswers];\n//       const answerIndex = updatedAnswers.findIndex(\n//         (answer) => answer.questionId === questionId\n//       );\n//       if (answerIndex !== -1) {\n//         updatedAnswers[answerIndex].selectedChoice = value;\n//       } else {\n//         updatedAnswers.push({ questionId, selectedChoice: value });\n//       }\n//       return updatedAnswers;\n//     });\n//   };\n\n//   const handleSubmit = () => {\n//     console.log(\"Submitted answers:\", answers);\n//     // Add your logic for handling the submitted answers\n//   };\n\n//   const renderQuestion = (question) => {\n//     switch (question.type_Quiz) {\n//       case \"key\":\n//         return (\n//           <div key={question.id}>\n//             <p>{question.title}</p>\n//             <div className=\"flex flex-col\">\n//               {question.keyEdit\n//                 .replace(/%i%/g, question.correctInput)\n//                 .replace(/%i1%/g, question.correctInput1)\n//                 .replace(/%i2%/g, question.correctInput2)}\n//             </div>\n//             <input\n//               type=\"text\"\n//               name=\"input\"\n//               value={getAnswer(question.id, \"input\") || \"\"}\n//               onChange={(e) => handleInputChange(e, question.id)}\n//             />\n//           </div>\n//         );\n//       case \"select\":\n//         return (\n//           <div key={question.id}>\n//             <p>{question.title}</p>\n//             <select\n//               name=\"selectedChoice\"\n//               value={getAnswer(question.id, \"selectedChoice\") || \"\"}\n//               onChange={(e) => handleSelectChange(e, question.id)}\n//             >\n//               <option value=\"\">Select an option</option>\n//               {question.QuizChoice.map((choice, index) => (\n//                 <option key={index} value={index}>\n//                   {choice}\n//                 </option>\n//               ))}\n//             </select>\n//           </div>\n//         );\n//       default:\n//         return null;\n//     }\n//   };\n\n//   const getAnswer = (questionId, key) => {\n//     const answer = answers.find((answer) => answer.questionId === questionId);\n//     return answer ? answer[key] : null;\n//   };\n\n//   return (\n//     <div>\n//       <h1>Quiz</h1>\n//       {quizData.map((question) => renderQuestion(question))}\n//       <button onClick={handleSubmit}>Submit</button>\n//     </div>\n//   );\n// };\n\n// export default Quiz;\n\n// import React, { useEffect, useState } from \"react\";\n// import QuizSample from \"./quiz\";\n// import Index from \"../layout\";\n\n// export default function Componentquiz() {\n//   const [quizData, setQuizData] = useState(QuizSample);\n//   const [timeOut, setTimeOut] = useState(10 * 60);\n//   const [score, setScore] = useState(null);\n//   const [showResult, setShowResult] = useState(false);\n//   const [inputValues, setInputValues] = useState(\n//     quizData.map((item) => ({\n//       id: item.id,\n//       input_: \"string_0\",\n//       input_1: \"\",\n//       input_2: \"\",\n//       correctAnswer: false,\n//     }))\n//   );\n\n//   useEffect(() => {\n//     const intervalTime = setInterval(() => {\n//       setTimeOut((prevTime) => prevTime - 1);\n//     }, 1000);\n\n//     return () => {\n//       clearInterval(intervalTime);\n//     };\n//   }, []);\n\n//   const min = Math.floor(timeOut / 60);\n//   const seconds = timeOut % 60;\n\n//   const handleChoiceSelect = (questionId, choiceIndex) => {\n//     setQuizData((prevQuestions) => {\n//       return prevQuestions.map((question) => {\n//         if (question.id === questionId) {\n//           return {\n//             ...question,\n//             activeChoice: choiceIndex,\n//           };\n//         }\n//         return question;\n//       });\n//     });\n//   };\n\n//   const handleSubmit = () => {\n//     let newscore = 0;\n//     quizData.forEach((prev) => {\n//       if (\n//         prev.activeChoice === prev.correctchoice &&\n//         prev.type_Quiz === \"select\"\n//       ) {\n//         newscore++;\n//       }\n//     });\n//     setScore(newscore);\n//     setShowResult(!showResult);\n//     console.log(\"log submit\", inputValues[0]?.input_);\n//   };\n\n//   useEffect(() => {\n//     console.log(\"check input --->\", inputValues[0].input_);\n//   }, [inputValues]);\n\n//   return (\n//     <div className=\"flex flex-col gap-[24px] items-center\">\n//       <Index min={min} seconds={seconds}>\n//         {quizData.map((item, ind) => {\n//           const newKeyEdit = item.keyEdit.replace(\n//             /%i%|%i1%|%i2%/gi,\n//             (match) => {\n//               if (match === \"%i%\") {\n//                 return (\n//                   <input\n//                     key={item.id}\n//                     type=\"text\"\n//                     value={inputValues[ind].input_}\n//                     name=\"input_\"\n//                     onChange={(e) => {\n//                       const updateValues = [...inputValues];\n//                       updateValues[ind].input_ = e.target.value;\n//                       setInputValues(updateValues);\n//                     }}\n//                   />\n//                 );\n//               } else if (match === \"%i1%\") {\n//                 return (\n//                   <input\n//                     key={item.id}\n//                     type=\"text\"\n//                     value={inputValues[ind].input_1}\n//                     name=\"input_1\"\n//                     onChange={(e) => {\n//                       const updateValues = [...inputValues];\n//                       updateValues[ind].input_1 = e.target.value;\n//                       setInputValues(updateValues);\n//                     }}\n//                   />\n//                 );\n//               } else if (match === \"%i2%\") {\n//                 return (\n//                   <input\n//                     key={item.id}\n//                     type=\"text\"\n//                     value={inputValues[ind].input_2}\n//                     name=\"input_2\"\n//                     onChange={(e) => {\n//                       const updateValues = [...inputValues];\n//                       updateValues[ind].input_2 = e.target.value;\n//                       setInputValues(updateValues);\n//                     }}\n//                   />\n//                 );\n//               }\n//               return match;\n//             }\n//           );\n\n//           return (\n//             <div key={item.id}>\n//               <h3>{item.question}</h3>\n//               {item.type_Quiz === \"select\" ? (\n//                 item.QuizChoice.map((choice, index) => (\n//                   <div key={index}>\n//                     <label>\n//                       <input\n//                         type=\"radio\"\n//                         checked={item.activeChoice === index}\n//                         onChange={() => handleChoiceSelect(item.id, index)}\n//                       />\n//                       {choice}\n//                     </label>\n//                   </div>\n//                 ))\n//               ) : (\n//                 <div>{newKeyEdit}</div>\n//               )}\n//             </div>\n//           );\n//         })}\n//       </Index>\n//       <button onClick={handleSubmit}>Submit</button>\n//       {showResult && (\n//         <div>\n//           <h2>Your Score: {score}</h2>\n//         </div>\n//       )}\n//     </div>\n//   );\n// }\n"],"mappings":"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EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA3E,EAAA,CAhtBwBD,aAAa;AAAAwG,EAAA,GAAbxG,aAAa;AAAA,IAAAwG,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}